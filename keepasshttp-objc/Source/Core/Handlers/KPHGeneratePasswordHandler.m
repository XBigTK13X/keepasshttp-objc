//
//  KPHGeneratePasswordHandler.m
//  keepasshttp-objc
//
//  Created by Tim Kretschmer on 4/5/14.
//  Copyright (c) 2014 xbigtk13x. All rights reserved.
//

#import "KPHGeneratePasswordHandler.h"

@implementation KPHGeneratePasswordHandler
- (void) handle: (Request*)request response:(Response*)response aes:(Aes*)aes
{
    byte[] pbEntropy = null;
    ProtectedString psNew;
    PwProfile autoProfile = Program.Config.PasswordGenerator.AutoGeneratedPasswordsProfile;
    PwGenerator.Generate(out psNew, autoProfile, pbEntropy, Program.PwGeneratorPool);
    
    byte[] pbNew = psNew.ReadUtf8();
    if (pbNew != null)
    {
        uint uBits = QualityEstimation.EstimatePasswordBits(pbNew);
        ResponseEntry item = new ResponseEntry(Request.GENERATE_PASSWORD, uBits.ToString(), StrUtil.Utf8.GetString(pbNew), Request.GENERATE_PASSWORD, null);
        resp.Entries.Add(item);
        resp.Success = true;
        resp.Count = 1;
        MemUtil.ZeroByteArray(pbNew);
    }
    
    resp.Id = r.Id;
    SetResponseVerifier(resp, aes);
    
    foreach (var entry in resp.Entries)
    {
        entry.Name = CryptoTransform(entry.Name, false, true, aes, CMode.ENCRYPT);
        entry.Login = CryptoTransform(entry.Login, false, true, aes, CMode.ENCRYPT);
        entry.Uuid = CryptoTransform(entry.Uuid, false, true, aes, CMode.ENCRYPT);
        entry.Password = CryptoTransform(entry.Password, false, true, aes, CMode.ENCRYPT);
    }
}
@end
